a.nav-link,a.nav-link:hover, a.nav-link:active, a.nav-link:visited, a.nav.link:focus{
    text-decoration: none;
    color: white;
  
}
nav{
    background-color: brown;
}
img{
    height:400px;
    width:600px;
}
.color{
    background-color: darkgray;

}

-------------
import { NgModule } from '@angular/core';
import { RouterModule, Routes } from '@angular/router';
import { HomeComponent } from './home/home.component';
import { LoginComponent } from './login/login.component';

import { ProfileComponent } from './profile/profile.component';

const routes: Routes = [
  {path:'', pathMatch:'full', component: LoginComponent},
  {path:'home', component: HomeComponent},
  {path:'login', component: LoginComponent},
  {path:'profile', component: ProfileComponent}
];

@NgModule({
  imports: [RouterModule.forRoot(routes)],
  exports: [RouterModule]
})
export class AppRoutingModule { }


<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">

  <!-- jQuery library -->
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
  
  <!-- Popper JS -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
  
  <!-- Latest compiled JavaScript -->
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  
  ------------------------------------------
import { Component, OnInit } from '@angular/core';
import { AppServiceService } from '../app-service.service';
@Component({
  selector: 'app-home',
  templateUrl: './home.component.html',
  styleUrls: ['./home.component.css']
})
export class HomeComponent implements OnInit {

  imgUrl:string= "assets/todays.PNG"
  constructor(private service:AppServiceService) { }

  ngOnInit(): void {
    this.getDataFromAPI();

  }

  getDataFromAPI(){
    this.service.getData().subscribe((response)=>{
      console.log('Response from API is', response)},
      (error)=>{console.log("Error is ", error)})
  }

}


<nav class="navbar navbar-expand-lg bg-danger text-white">
    <a class="navbar-brand nav-link" href="#">Navbar</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
  
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
      <ul class="navbar-nav mr-auto">
        <li class="nav-item active">
          <a class="nav-link" [routerLink]='["home"]' >Home <span class="sr-only">(current)</span></a>
        </li>
        <li class="nav-item">
          <a class="nav-link" [routerLink]='["login"]'>Login</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" [routerLink]='["profile"]'>Profile</a>
          </li>
        <li class="nav-item dropdown">
          <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            Dropdown
          </a>
          <div class="dropdown-menu" aria-labelledby="navbarDropdown">
            <a class="dropdown-item" href="#">Action</a>
            <a class="dropdown-item" href="#">Another action</a>
            <div class="dropdown-divider"></div>
            <a class="dropdown-item" href="#">Something else here</a>
          </div>
        </li>
        <li class="nav-item">
          <a class="nav-link disabled" href="#">Disabled</a>
        </li>
      </ul>
      <form class="form-inline my-2 my-lg-0">
        <input class="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search">
        <button class="btn color btn-outline-success my-2 my-sm-0" type="submit">Search</button>
      </form>
    </div>
      </nav>
<div></div>




<router-outlet></router-outlet>

---------------
const express = require('express');
const router = express.Router();
const bodyParser = require('body-parser');

const http = require('http');
const path = require('path');

const app = express();
const cors = require('cors');

app.use(cors());
app.use(function (req, res, next) {
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');
  res.setHeader('Access-Control-Allow-Credentials', true);
  next();
});

const user = {
  name: 'userName',
  email: "test@ymail.com"
};

app.use(bodyParser.json())

app.get('/', (req, res) => {
  res.send('Hello from server')
})

app.get('/getData', (req, res) => {
  res.sendStatus(401);
})

app.get('/userinfo', (req, res) => {
  res.send(user)

})
const port = process.env.PORT || 3000;
app.listen(port, () => {
  console.log('Express API is running at port 3000')
})


-------------------
Intersecptor:

import { Injectable } from '@angular/core';
import {
  HttpRequest,
  HttpHandler,
  HttpEvent,
  HttpInterceptor,
  HttpErrorResponse
} from '@angular/common/http';
import { Observable, throwError } from 'rxjs';
import { tap } from 'rxjs/operators'
import { Router } from '@angular/router'

@Injectable()
export class AuthInterceptor implements HttpInterceptor {

  constructor(private router: Router) { }

  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {
    console.log('Intersecptor is working!')

    return next.handle(request)
      .pipe(tap(() => { },
        (error: any) => {
          if (error instanceof HttpErrorResponse) {
            console.log("not getting handled.")
            if (error.status == 401) {
              this.router.navigate(['login']);
            } else {
              return throwError(error)
            }

          }

        }));
  }
}
------------------------

profile html
<div class="container mt-5">
    <div class="row" *ngIf="user">
        <h3>Welcome to profile page!</h3>
        <div class="col-md-3">
            <label>Name : </label>
        </div>
        <div class="col-md-9">
            {{user.name}}</div>
        <div class="row">
            <div class="col-md-3">
                <label>Email : </label>
            </div>
            <div class="col-md-9">
                {{user.email}}
            </div>
        </div>
    </div>
</div>

-----------------------

Profile TS
import { Component, OnInit } from '@angular/core';
import { ProfileService } from './profile.service';

@Component({
  selector: 'app-profile',
  templateUrl: './profile.component.html',
  styleUrls: ['./profile.component.css']
})
export class ProfileComponent implements OnInit {

  constructor(private profileservice: ProfileService) { }

  user: any;
  errorMessage: any;
  ngOnInit(): void {
    this.fetchProfile();
  }
  fetchProfile() {
    this.profileservice.getProfile().subscribe((data) => {
      this.user = data;

    },
      (error) => {
        console.log("Error is ", error)
      })

  }

}

-------------
profile service

import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs'
import { environment } from 'src/environments/environment';

@Injectable({
  providedIn: 'root'
})
export class ProfileService {

  constructor(private http: HttpClient) { }

  api: string = environment.api;

  getProfile(): Observable<any> {
    return this.http.get(this.api + 'userinfo');
  }

}

---------------
login html


<div class="container mt-5 bg-light text-dark ">
    <h2>Login Form</h2>

<form  method="post">
 

  <div class="container">
    <label for="uname"><b>Username :  </b></label>
    <input type="text" placeholder="Enter Username" name="uname" required><br><br>
    

    <label for="psw"><b>Password : </b></label>
    <input type="password" placeholder="Enter Password" name="psw" required><br><br>
        
    <button type="submit">Login</button><br><br>
    
  </div>

  <div class="container" style="background-color:#f1f1f1">
    
 
  </div>
</form>
</div>
----------------
login ts
------------------------

home ts

import { Component, OnInit } from '@angular/core';
import { AppServiceService } from '../app-service.service';
@Component({
  selector: 'app-home',
  templateUrl: './home.component.html',
  styleUrls: ['./home.component.css']
})
export class HomeComponent implements OnInit {

  imgUrl:string= "assets/todays.PNG"
  constructor(private service:AppServiceService) { }

  ngOnInit(): void {
    this.getDataFromAPI();

  }

  getDataFromAPI(){
    this.service.getData().subscribe((response)=>{
      console.log('Response from API is', response)},
      (error)=>{console.log("Error is ", error)})
  }

}
------------------







